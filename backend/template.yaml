AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: kitchen-tracker serverless backend

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, prod]
    Description: Deployment environment

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.13
    Environment:
      Variables:
        FAMILY_MEMBERS_TABLE: !Ref FamilyMembersTable
        RECURRING_ACTIVITIES_TABLE: !Ref RecurringActivitiesTable
        ACTIVITY_COMPLETIONS_TABLE: !Ref ActivityCompletionsTable
        HOUSEHOLD_ID: !Sub "${AWS::StackName}-household"
        ENVIRONMENT: !Ref Environment

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/kitchen_tracker/
      Handler: app.lambda_handler
      Runtime: python3.13
      Events:
        # Root endpoint
        RootApi:
          Type: Api
          Properties:
            Path: /
            Method: GET
              
        # Meal endpoints  
        MealList:
          Type: Api
          Properties:
            Path: /meals
            Method: GET
        MealSetup:
          Type: Api
          Properties:
            Path: /meals/setup
            Method: POST
        MealCook:
          Type: Api
          Properties:
            Path: /meals/cook
            Method: POST
        MealRecords:
          Type: Api
          Properties:
            Path: /meals/records
            Method: GET
        MealById:
          Type: Api
          Properties:
            Path: /meals/{meal_id}
            Method: GET
        MealStatusUpdate:
          Type: Api
          Properties:
            Path: /meals/{meal_id}/status
            Method: PUT
        
        # NEW Family Members endpoints
        FamilyMembersList:
          Type: Api
          Properties:
            Path: /family-members
            Method: GET
        FamilyMembersCreate:
          Type: Api
          Properties:
            Path: /family-members
            Method: POST
        FamilyMembersOptions:
          Type: Api
          Properties:
            Path: /family-members
            Method: OPTIONS
        FamilyMemberById:
          Type: Api
          Properties:
            Path: /family-members/{member_id}
            Method: ANY
        FamilyMemberActivities:
          Type: Api
          Properties:
            Path: /family-members/{member_id}/activities
            Method: GET

        # NEW Activities endpoints
        ActivitiesList:
          Type: Api
          Properties:
            Path: /activities
            Method: GET
        ActivitiesCreate:
          Type: Api
          Properties:
            Path: /activities
            Method: POST
        ActivitiesOptions:
          Type: Api
          Properties:
            Path: /activities
            Method: OPTIONS
        ActivityById:
          Type: Api
          Properties:
            Path: /activities/{activity_id}
            Method: ANY
        ActivityComplete:
          Type: Api
          Properties:
            Path: /activities/{activity_id}/complete
            Method: POST
        ActivityUndo:
          Type: Api
          Properties:
            Path: /activities/{activity_id}/undo
            Method: POST

        # NEW Dashboard and Summary endpoints
        Dashboard:
          Type: Api
          Properties:
            Path: /dashboard
            Method: GET
        Summary:
          Type: Api
          Properties:
            Path: /summary
            Method: GET
        ActivitiesDueToday:
          Type: Api
          Properties:
            Path: /activities/due-today
            Method: GET
        ActivitiesOverdue:
          Type: Api
          Properties:
            Path: /activities/overdue
            Method: GET
        ActivitiesCompletedToday:
          Type: Api
          Properties:
            Path: /activities/completed-today
            Method: GET
      
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref FamilyMembersTable
        - DynamoDBCrudPolicy:
            TableName: !Ref RecurringActivitiesTable
        - DynamoDBCrudPolicy:
            TableName: !Ref ActivityCompletionsTable

  # DynamoDB table with environment-specific naming
  # Family Members Table (replaces separate Person/Pet tables)
  FamilyMembersTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-FamilyMembers"
      AttributeDefinitions:
        - AttributeName: member_id
          AttributeType: S
        - AttributeName: household_id
          AttributeType: S
      KeySchema:
        - AttributeName: member_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: HouseholdIndex
          KeySchema:
            - AttributeName: household_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  # Recurring Activities Table (replaces TaskItem/TrackableItem)
  RecurringActivitiesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-RecurringActivities"
      AttributeDefinitions:
        - AttributeName: activity_id
          AttributeType: S
        - AttributeName: household_id
          AttributeType: S
        - AttributeName: assigned_to
          AttributeType: S
      KeySchema:
        - AttributeName: activity_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: HouseholdIndex
          KeySchema:
            - AttributeName: household_id
              KeyType: HASH
          Projection:
            ProjectionType: ALL
        - IndexName: AssignedToIndex
          KeySchema:
            - AttributeName: assigned_to
              KeyType: HASH
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  # Activity Completions Table (replaces CompletionRecord/TaskCompletionRecord)
  ActivityCompletionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-ActivityCompletions"
      AttributeDefinitions:
        - AttributeName: completion_id
          AttributeType: S
        - AttributeName: activity_id
          AttributeType: S
        - AttributeName: household_id
          AttributeType: S
        - AttributeName: completion_date
          AttributeType: S
      KeySchema:
        - AttributeName: completion_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: ActivityIndex
          KeySchema:
            - AttributeName: activity_id
              KeyType: HASH
            - AttributeName: completion_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: HouseholdDateIndex
          KeySchema:
            - AttributeName: household_id
              KeyType: HASH
            - AttributeName: completion_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
      BillingMode: PAY_PER_REQUEST

  # Email processing (only for prod)
  EmailProcessorFunction:
    Type: AWS::Serverless::Function
    Condition: IsProd
    Properties:
      CodeUri: src/kitchen_tracker/
      Handler: app.email_lambda_handler
      Runtime: python3.13
      Environment:
        Variables:
          EMAIL_BUCKET: !Ref EmailStorageBucket
          API_URL: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod"
          HOUSEHOLD_ID: !Sub "${AWS::StackName}-household"
      Policies:
        - S3ReadPolicy:
            BucketName: !Ref EmailStorageBucket
        - Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: "*"

  EmailStorageBucket:
    Type: AWS::S3::Bucket
    Condition: IsProd
    Properties:
      BucketName: !Sub "${AWS::StackName}-emails"
      Tags:
        - Key: Environment
          Value: !Ref Environment

  EmailBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: IsProd
    Properties:
      Bucket: !Ref EmailStorageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowSESPuts"
            Effect: Allow
            Principal:
              Service: ses.amazonaws.com
            Action: s3:PutObject
            Resource: !Sub "arn:aws:s3:::${EmailStorageBucket}/*"
            Condition:
              StringEquals:
                aws:Referer: !Ref "AWS::AccountId"

Conditions:
  IsProd: !Equals [!Ref Environment, "prod"]

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
  
  HouseholdId:
    Description: "Household ID for this deployment"
    Value: !Sub "${AWS::StackName}-household"
  
  Environment:
    Description: "Deployment environment"
    Value: !Ref Environment
  
  FamilyMembersTableName:
    Description: "DynamoDB Family Members table name"
    Value: !Ref FamilyMembersTable
  
  RecurringActivitiesTableName:
    Description: "DynamoDB Recurring Activities table name"
    Value: !Ref RecurringActivitiesTable
  
  ActivityCompletionsTableName:
    Description: "DynamoDB Activity Completions table name"
    Value: !Ref ActivityCompletionsTable